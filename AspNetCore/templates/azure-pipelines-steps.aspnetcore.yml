# Steps of building ASP.NET Core as artifacts output
parameters:
  gitVersionVersion: ''
  nugetVersion: ''
  buildConfiguration: ''
  deployPackage: true
  deployFiles: true
  outputDirectory: $(Build.ArtifactStagingDirectory)
  
steps:
## Build Versioning

- task: NuGetToolInstaller@0
  displayName: NuGet use ${{ parameters.nugetVersion }}
  inputs:
    versionSpec: ${{ parameters.nugetVersion }}

- task: NuGetCommand@2
  displayName: NuGet Install GitVersion
  inputs:
    command: custom
    arguments: install GitVersion.CommandLine.DotNetCore -Version ${{ parameters.gitVersionVersion }} -OutputDirectory $(Build.BinariesDirectory)

- powershell: dotnet $(Build.BinariesDirectory)\GitVersion.CommandLine.DotNetCore.${{ parameters.gitVersionVersion }}\tools\GitVersion.dll $(Build.SourcesDirectory) /output buildserver /nofetch
  displayName: GitVersion Execute

- powershell:   |
    $CI_Version = "$env:GITVERSION_LEGACYSEMVER"
    Write-Host ("##vso[task.setvariable variable=CI_Version;]$CI_Version")
    Write-Host "Build ID: $(Build.BuildId)"
    Write-Host "Build BuildNumber: $(Build.BuildNumber)"
  displayName: "Build Versions"

## Build Versioning

- task: NuGetCommand@2
  displayName: "NuGet Restore"
  inputs:
    restoreSolution: '**/*.csproj'
    feedsToUse: config
    nugetConfigPath: NuGet.config

- task: DotNetCoreCLI@2
  displayName: ".NET build"
  inputs:
    projects: '**/*.csproj'
    arguments: --configuration ${{ parameters.buildConfiguration }} --no-restore

- task: DotNetCoreCLI@2
  displayName: ".NET test"
  inputs:
    command: test
    projects: 'test/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: ".NET publish package"
  condition: ${{ parameters.deployPackage }}
  inputs:
    command: publish
    arguments: --configuration ${{ parameters.buildConfiguration }} --no-restore --output ${{ parameters.outputDirectory }}/app/pkg

- task: DotNetCoreCLI@2
  displayName: ".NET publish files"
  condition: ${{ parameters.deployFiles }}
  inputs:
    command: publish
    arguments: --configuration ${{ parameters.buildConfiguration }} --no-restore --output ${{ parameters.outputDirectory }}/files
    zipAfterPublish: false

## optional:
- task: PublishBuildArtifacts@1
  displayName: "Publish artifacts"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: drop
