# Steps of building Docker from artifacts
# Uses the flat file output of an ASP.NET Core build and creates a docker image
parameters:
  artifactsTargetFolder: '_artifacts/dockercontents'
  dockerRegistry: ''
  dockerRepository: ''
  dockerImageName: ''
  dockerImageTag: $(Build.BuildId)
  dockerFile: 'Dockerfile'
  dockerFileFolder: $(System.DefaultWorkingDirectory)
  dockerContents: ''
  dockerAzureSubscriptionName: ''
  dockerAzureCRSubscription: ''
  
steps:

- task: DownloadBuildArtifacts@0
  displayName: "Download artifacts"
  inputs:
    artifactName: drop

- task: CopyFiles@2
  displayName: "Copy files from artifacts"
  inputs:
    SourceFolder: ${{ parameters.dockerContents }}
    TargetFolder: ${{ parameters.artifactsTargetFolder }}

- script: |
    docker info
  displayName: Docker Info

- script: |
    docker build -t ${{ parameters.dockerRegistry }}/${{ parameters.dockerRepository }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageTag }} -f ${{ parameters.dockerFile }} ${{ parameters.dockerFileFolder }}
  displayName: Docker Image Build

- task: Docker@0
  displayName: Docker Push Image to Registry
  inputs:
    azureSubscription: ${{ parameters.dockerAzureSubscriptionName }}
    azureContainerRegistry: ${{ parameters.dockerAzureCRSubscription }}
    action: 'Push an image'
    imageName: ${{ parameters.dockerRegistry }}/${{ parameters.dockerRepository }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageTag }}
